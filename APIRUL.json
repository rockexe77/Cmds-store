{
  "api": "const mongoose = require("mongoose");
const fs = require("fs");

const uri = "mongodb+srv://rockx27:rockonx27fire@cluster0.e5kr5.mongodb.net/GoatBotV2?retryWrites=true&w=majority&appName=Cluster0"; 
mongoose.connect(uri, { useNewUrlParser: true, useUnifiedTopology: true });

const emojis = [
  "😍", "😄", "😎", "😊", "😉", "😜", "🙃", "🥳", "💖", "💥", 
  "💙", "💚", "💛", "💜", "❤️", "💗", "💘", "💝", "🧡", "🖤", 
  "🤩", "🥰", "😇", "😻", "💌", "🌟", "🔥", "🫶🏻", "😙", "😚", 
  "🙂", "🥹", "😡", "😺", "😼", "😽", "😸", "😝", "😋", "😛", 
  "😒", "😏", "😦", "😳", "🙈", "🙉", "🙊", "🙀", "🐒", "🐤", 
  "🐥", "🐣", "🐸", "🦋", "🌸"
];

const TeachSchema = new mongoose.Schema({
  trigger: String,
  responses: [String]
});
const Teach = mongoose.models.Teach || mongoose.model("Teach", TeachSchema);

const fontData = JSON.parse(fs.readFileSync("style.json", "utf-8"));
const fontStyle = fontData["3"];

function applyFontStyle(text, fontStyle) {
  return text.split('').map(char => fontStyle[char] || char).join('');
}

const stringSimilarity = require("string-similarity");

async function getBotResponse(input) {
  try {
    const allData = await Teach.find();
    const triggers = allData.map(item => item.trigger.toLowerCase());

    const normalizedInput = input.toLowerCase();
    const matchingTriggers = triggers.filter(trigger =>
      trigger.includes(normalizedInput) || normalizedInput.includes(trigger)
    );

    const matches = stringSimilarity.findBestMatch(normalizedInput, triggers);
    const bestMatch = matches.bestMatch.rating > 0.6 ? matches.bestMatch.target : null;
    const finalMatch = bestMatch || matchingTriggers[0];

    if (finalMatch) {
      const matchedData = allData.find(item => item.trigger.toLowerCase() === finalMatch);
      if (matchedData && matchedData.responses.length > 0) {
        const randomIndex = Math.floor(Math.random() * matchedData.responses.length);
        const randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];
        const styledResponse = applyFontStyle(matchedData.responses[randomIndex], fontStyle);

        return `${styledResponse} ${randomEmoji}`;
      }
    }

    return applyFontStyle("𝐨𝐢 𝐦𝐚𝐦𝐚 𝐞𝐢𝐭𝐚 𝐚𝐦𝐤 𝐭𝐞𝐚𝐜𝐡 𝐤𝐨𝐫𝐚 𝐡𝐲 𝐧𝐚𝐢 <🥺", fontStyle);
  } catch (error) {
    console.error("MongoDB থেকে ডাটা নিয়ে আসার সময় ত্রুটি:", error.message);
    return applyFontStyle("ত্রুটি ঘটেছে।", fontStyle);
  }
      }"
}
